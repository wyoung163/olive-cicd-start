name: istory ci/cd dev pipeline

permissions:
  contents: read
  security-events: write  # CodeQL 결과를 업로드하기 위한 권한
  actions: read

on:
  push:
    branches: [ "main"]
jobs:
  verify_pipeline:
    environment: runner
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          # root 계정 비밀번호
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          # 사용자 계정
          MYSQL_USER: ${{ secrets.MYSQL_USERNAME }}
          # 사용자 계정 비밀번호
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          # 사용자 계정 데이터베이스
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - name: 소스코드 다운로드
      uses: actions/checkout@v4 

    - name: JDK 21 설치
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: change application.yml
      run: |
        cat > src/main/resources/application.yml << EOF
        spring:
          datasource:
            url: ${{ secrets.DATABASE_URL }} # 예dbc:mysql://localhost:3306/istory
            username: ${{ secrets.MYSQL_USERNAME }}
            password: ${{ secrets.MYSQL_PASSWORD }}
            driver-class-name: com.mysql.cj.jdbc.Driver
          jpa:
            database-platform: org.hibernate.dialect.MySQL8Dialect
            hibernate:
              ddl-auto: update
            show-sql: true
          application:
            name: USER-SERVICE
          jwt:
            issuer: user@gmail.com
            secret_key: study-springboot
        management:
          endpoints:
            web:
              exposure:
                include: health,info
          endpoint:
            health:
              show-details: always
        EOF
    - name: 기본 수행정보 Step Summary 에 표시
      run: |
        echo "## 워크플로우 실행 정보 요약" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "* 실행 담당자: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "* 실행 이벤트: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        echo "* 실행 저장소: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "* 실행 브랜치: ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY

    - name: 3.Build with Gradle
      uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      with:
        arguments: build

    - name: 4.Docker Image Build
      run: docker build ./xinfra/docker -t ${{ secrets.DOCKER_USERNAME }}/istory -f ./xinfra/docker/Dockerfile
    
    - name: 5.Docker Login
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        logout: true

    - name: 6.Docker Push
      run: docker push ${{ secrets.DOCKER_USERNAME }}/istory